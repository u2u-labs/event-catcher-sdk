// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/streaming.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to get node information for a chain
type GetNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       string                 `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	mi := &file_proto_streaming_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{0}
}

func (x *GetNodeRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

type GetListNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       string                 `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListNodeRequest) Reset() {
	*x = GetListNodeRequest{}
	mi := &file_proto_streaming_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListNodeRequest) ProtoMessage() {}

func (x *GetListNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListNodeRequest.ProtoReflect.Descriptor instead.
func (*GetListNodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{1}
}

func (x *GetListNodeRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

type GetListNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Nodes         []*NodeResponse        `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Optional, for error cases
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListNodeResponse) Reset() {
	*x = GetListNodeResponse{}
	mi := &file_proto_streaming_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListNodeResponse) ProtoMessage() {}

func (x *GetListNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListNodeResponse.ProtoReflect.Descriptor instead.
func (*GetListNodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{2}
}

func (x *GetListNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetListNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetListNodeResponse) GetNodes() []*NodeResponse {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GetListNodeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type NodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	DomainHealth  string                 `protobuf:"bytes,2,opt,name=domain_health,json=domainHealth,proto3" json:"domain_health,omitempty"`
	DomainRpc     string                 `protobuf:"bytes,3,opt,name=domain_rpc,json=domainRpc,proto3" json:"domain_rpc,omitempty"`
	Node          string                 `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`
	ChainId       string                 `protobuf:"bytes,5,opt,name=chainId,proto3" json:"chainId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeResponse) Reset() {
	*x = NodeResponse{}
	mi := &file_proto_streaming_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeResponse) ProtoMessage() {}

func (x *NodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeResponse.ProtoReflect.Descriptor instead.
func (*NodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{3}
}

func (x *NodeResponse) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *NodeResponse) GetDomainHealth() string {
	if x != nil {
		return x.DomainHealth
	}
	return ""
}

func (x *NodeResponse) GetDomainRpc() string {
	if x != nil {
		return x.DomainRpc
	}
	return ""
}

func (x *NodeResponse) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *NodeResponse) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

// Response containing node information
type GetNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeAddress   string                 `protobuf:"bytes,1,opt,name=node_address,json=nodeAddress,proto3" json:"node_address,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	DomainHealth  string                 `protobuf:"bytes,3,opt,name=domain_health,json=domainHealth,proto3" json:"domain_health,omitempty"`
	DomainRpc     string                 `protobuf:"bytes,4,opt,name=domain_rpc,json=domainRpc,proto3" json:"domain_rpc,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // Optional, for error cases
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	mi := &file_proto_streaming_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{4}
}

func (x *GetNodeResponse) GetNodeAddress() string {
	if x != nil {
		return x.NodeAddress
	}
	return ""
}

func (x *GetNodeResponse) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GetNodeResponse) GetDomainHealth() string {
	if x != nil {
		return x.DomainHealth
	}
	return ""
}

func (x *GetNodeResponse) GetDomainRpc() string {
	if x != nil {
		return x.DomainRpc
	}
	return ""
}

func (x *GetNodeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Request to register a node for a data ID
type RegisterNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          string                 `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	ChainId       string                 `protobuf:"bytes,2,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Domain        string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	DomainRpc     string                 `protobuf:"bytes,4,opt,name=domain_rpc,json=domainRpc,proto3" json:"domain_rpc,omitempty"`
	DomainHealth  string                 `protobuf:"bytes,5,opt,name=domain_health,json=domainHealth,proto3" json:"domain_health,omitempty"`
	Port          string                 `protobuf:"bytes,6,opt,name=port,proto3" json:"port,omitempty"`
	Secret        string                 `protobuf:"bytes,7,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_proto_streaming_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterNodeRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *RegisterNodeRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *RegisterNodeRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *RegisterNodeRequest) GetDomainRpc() string {
	if x != nil {
		return x.DomainRpc
	}
	return ""
}

func (x *RegisterNodeRequest) GetDomainHealth() string {
	if x != nil {
		return x.DomainHealth
	}
	return ""
}

func (x *RegisterNodeRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *RegisterNodeRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type ValidateClientRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// string client = 1; // Address User Client
	Signature     string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Timestamp     string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Node          string `protobuf:"bytes,3,opt,name=node,proto3" json:"node,omitempty"` // Address Node
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateClientRequest) Reset() {
	*x = ValidateClientRequest{}
	mi := &file_proto_streaming_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateClientRequest) ProtoMessage() {}

func (x *ValidateClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateClientRequest.ProtoReflect.Descriptor instead.
func (*ValidateClientRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{6}
}

func (x *ValidateClientRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *ValidateClientRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *ValidateClientRequest) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

type ValidateClientResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ConnectionToken string                 `protobuf:"bytes,3,opt,name=connectionToken,proto3" json:"connectionToken,omitempty"`
	Receipt         *ReceiptResponse       `protobuf:"bytes,4,opt,name=receipt,proto3" json:"receipt,omitempty"` // Add this line to include ReceiptResponse
	ErrorMessage    string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ValidateClientResponse) Reset() {
	*x = ValidateClientResponse{}
	mi := &file_proto_streaming_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateClientResponse) ProtoMessage() {}

func (x *ValidateClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateClientResponse.ProtoReflect.Descriptor instead.
func (*ValidateClientResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{7}
}

func (x *ValidateClientResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ValidateClientResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidateClientResponse) GetConnectionToken() string {
	if x != nil {
		return x.ConnectionToken
	}
	return ""
}

func (x *ValidateClientResponse) GetReceipt() *ReceiptResponse {
	if x != nil {
		return x.Receipt
	}
	return nil
}

func (x *ValidateClientResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type ReceiptResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Node             string                 `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	TotalServedBytes string                 `protobuf:"bytes,2,opt,name=totalServedBytes,proto3" json:"totalServedBytes,omitempty"`
	Status           string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Nonce            string                 `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReceiptResponse) Reset() {
	*x = ReceiptResponse{}
	mi := &file_proto_streaming_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptResponse) ProtoMessage() {}

func (x *ReceiptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptResponse.ProtoReflect.Descriptor instead.
func (*ReceiptResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{8}
}

func (x *ReceiptResponse) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *ReceiptResponse) GetTotalServedBytes() string {
	if x != nil {
		return x.TotalServedBytes
	}
	return ""
}

func (x *ReceiptResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReceiptResponse) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

// Response to node registration
type RegisterNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_proto_streaming_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request to stream data
type StreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataId        string                 `protobuf:"bytes,1,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // Offset to resume streaming from
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_proto_streaming_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{10}
}

func (x *StreamRequest) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

func (x *StreamRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Data chunk containing the actual data and metadata
type DataChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Offset        int64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DataId        string                 `protobuf:"bytes,4,opt,name=data_id,json=dataId,proto3" json:"data_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataChunk) Reset() {
	*x = DataChunk{}
	mi := &file_proto_streaming_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunk) ProtoMessage() {}

func (x *DataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_streaming_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunk.ProtoReflect.Descriptor instead.
func (*DataChunk) Descriptor() ([]byte, []int) {
	return file_proto_streaming_proto_rawDescGZIP(), []int{11}
}

func (x *DataChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DataChunk) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DataChunk) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *DataChunk) GetDataId() string {
	if x != nil {
		return x.DataId
	}
	return ""
}

var File_proto_streaming_proto protoreflect.FileDescriptor

const file_proto_streaming_proto_rawDesc = "" +
	"\n" +
	"\x15proto/streaming.proto\x1a\x1cgoogle/api/annotations.proto\"+\n" +
	"\x0eGetNodeRequest\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\tR\achainId\"/\n" +
	"\x12GetListNodeRequest\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\tR\achainId\"\x93\x01\n" +
	"\x13GetListNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\x05nodes\x18\x03 \x03(\v2\r.NodeResponseR\x05nodes\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\"\x98\x01\n" +
	"\fNodeResponse\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12#\n" +
	"\rdomain_health\x18\x02 \x01(\tR\fdomainHealth\x12\x1d\n" +
	"\n" +
	"domain_rpc\x18\x03 \x01(\tR\tdomainRpc\x12\x12\n" +
	"\x04node\x18\x04 \x01(\tR\x04node\x12\x18\n" +
	"\achainId\x18\x05 \x01(\tR\achainId\"\xb5\x01\n" +
	"\x0fGetNodeResponse\x12!\n" +
	"\fnode_address\x18\x01 \x01(\tR\vnodeAddress\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12#\n" +
	"\rdomain_health\x18\x03 \x01(\tR\fdomainHealth\x12\x1d\n" +
	"\n" +
	"domain_rpc\x18\x04 \x01(\tR\tdomainRpc\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"\xcb\x01\n" +
	"\x13RegisterNodeRequest\x12\x12\n" +
	"\x04node\x18\x01 \x01(\tR\x04node\x12\x18\n" +
	"\achainId\x18\x02 \x01(\tR\achainId\x12\x16\n" +
	"\x06domain\x18\x03 \x01(\tR\x06domain\x12\x1d\n" +
	"\n" +
	"domain_rpc\x18\x04 \x01(\tR\tdomainRpc\x12#\n" +
	"\rdomain_health\x18\x05 \x01(\tR\fdomainHealth\x12\x12\n" +
	"\x04port\x18\x06 \x01(\tR\x04port\x12\x16\n" +
	"\x06secret\x18\a \x01(\tR\x06secret\"g\n" +
	"\x15ValidateClientRequest\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\tR\tsignature\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\tR\ttimestamp\x12\x12\n" +
	"\x04node\x18\x03 \x01(\tR\x04node\"\xc7\x01\n" +
	"\x16ValidateClientResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x0fconnectionToken\x18\x03 \x01(\tR\x0fconnectionToken\x12*\n" +
	"\areceipt\x18\x04 \x01(\v2\x10.ReceiptResponseR\areceipt\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"\x7f\n" +
	"\x0fReceiptResponse\x12\x12\n" +
	"\x04node\x18\x01 \x01(\tR\x04node\x12*\n" +
	"\x10totalServedBytes\x18\x02 \x01(\tR\x10totalServedBytes\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x14\n" +
	"\x05nonce\x18\x04 \x01(\tR\x05nonce\"J\n" +
	"\x14RegisterNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"@\n" +
	"\rStreamRequest\x12\x17\n" +
	"\adata_id\x18\x01 \x01(\tR\x06dataId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\"n\n" +
	"\tDataChunk\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x03R\x06offset\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x17\n" +
	"\adata_id\x18\x04 \x01(\tR\x06dataId2\x99\x03\n" +
	"\x0eGatewayService\x12\\\n" +
	"\x0fGetNodeForChain\x12\x0f.GetNodeRequest\x1a\x10.GetNodeResponse\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v1/gateway/get_node_for_chain\x12a\n" +
	"\fRegisterNode\x12\x14.RegisterNodeRequest\x1a\x15.RegisterNodeResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v1/gateway/register_node\x12i\n" +
	"\x0eValidateClient\x12\x16.ValidateClientRequest\x1a\x17.ValidateClientResponse\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/gateway/validate_client\x12[\n" +
	"\vGetListNode\x12\x13.GetListNodeRequest\x1a\x14.GetListNodeResponse\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/gateway/get_list_node24\n" +
	"\x04Node\x12,\n" +
	"\n" +
	"StreamData\x12\x0e.StreamRequest\x1a\n" +
	".DataChunk\"\x000\x01B\x1dZ\x1bevent-catcher-gateway/protob\x06proto3"

var (
	file_proto_streaming_proto_rawDescOnce sync.Once
	file_proto_streaming_proto_rawDescData []byte
)

func file_proto_streaming_proto_rawDescGZIP() []byte {
	file_proto_streaming_proto_rawDescOnce.Do(func() {
		file_proto_streaming_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_streaming_proto_rawDesc), len(file_proto_streaming_proto_rawDesc)))
	})
	return file_proto_streaming_proto_rawDescData
}

var file_proto_streaming_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_streaming_proto_goTypes = []any{
	(*GetNodeRequest)(nil),         // 0: GetNodeRequest
	(*GetListNodeRequest)(nil),     // 1: GetListNodeRequest
	(*GetListNodeResponse)(nil),    // 2: GetListNodeResponse
	(*NodeResponse)(nil),           // 3: NodeResponse
	(*GetNodeResponse)(nil),        // 4: GetNodeResponse
	(*RegisterNodeRequest)(nil),    // 5: RegisterNodeRequest
	(*ValidateClientRequest)(nil),  // 6: ValidateClientRequest
	(*ValidateClientResponse)(nil), // 7: ValidateClientResponse
	(*ReceiptResponse)(nil),        // 8: ReceiptResponse
	(*RegisterNodeResponse)(nil),   // 9: RegisterNodeResponse
	(*StreamRequest)(nil),          // 10: StreamRequest
	(*DataChunk)(nil),              // 11: DataChunk
}
var file_proto_streaming_proto_depIdxs = []int32{
	3,  // 0: GetListNodeResponse.nodes:type_name -> NodeResponse
	8,  // 1: ValidateClientResponse.receipt:type_name -> ReceiptResponse
	0,  // 2: GatewayService.GetNodeForChain:input_type -> GetNodeRequest
	5,  // 3: GatewayService.RegisterNode:input_type -> RegisterNodeRequest
	6,  // 4: GatewayService.ValidateClient:input_type -> ValidateClientRequest
	1,  // 5: GatewayService.GetListNode:input_type -> GetListNodeRequest
	10, // 6: Node.StreamData:input_type -> StreamRequest
	4,  // 7: GatewayService.GetNodeForChain:output_type -> GetNodeResponse
	9,  // 8: GatewayService.RegisterNode:output_type -> RegisterNodeResponse
	7,  // 9: GatewayService.ValidateClient:output_type -> ValidateClientResponse
	2,  // 10: GatewayService.GetListNode:output_type -> GetListNodeResponse
	11, // 11: Node.StreamData:output_type -> DataChunk
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_proto_streaming_proto_init() }
func file_proto_streaming_proto_init() {
	if File_proto_streaming_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_streaming_proto_rawDesc), len(file_proto_streaming_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_streaming_proto_goTypes,
		DependencyIndexes: file_proto_streaming_proto_depIdxs,
		MessageInfos:      file_proto_streaming_proto_msgTypes,
	}.Build()
	File_proto_streaming_proto = out.File
	file_proto_streaming_proto_goTypes = nil
	file_proto_streaming_proto_depIdxs = nil
}
